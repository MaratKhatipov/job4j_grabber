1- руками рассчитать сколько будет занимать памяти объект User user = new User(50, "Petya");
Заголовок (64bit) 12 байт, выравнивание до кратности 8, ТОГО 16 байт
    поле int 4 байта
    поле String name:
    - заголовок = 12 байт
    - три поля int (4 * 3) = 12 байт
    - ссылка на массив char[] = 4 байта
ИТОГО: String 32 байта (28 байт + 4 (выравнивание до кратности 8)
  -- массив char[]:
  -- Заголовок 16 байт
  -- элементы char 2 байта * количество символов (Petya) 5шт = 10 байт
  -- Выравнивание для кратности 8 = 6
    итого 32 байта
ИТОГО на строку 64 байта = 32 + 32

ИТОГО на объект user 88 байт (16 + 4 + 64 = 84 + 4(выравнивание до кратности 8))

2. Нужно найти информацию. Сколько памяти занимает пустой объект без полей:
Пустой объект занимает 16 байт, 12 байт заголовок + 4 байта - выравнивание до кратности 8


3. Добиться состояния, когда виртуальная машины вызывает сборщик мусора самостоятельно.
За счет ключей xmx.
Объяснить поведение программы в текстовом файле:

ПЕРВЫЙ ВАРИАНТ GC не сработал:
-Xmx4m -Xms4m
- создаём в цикле 10 объектов
- System.gc(); не вызван
=== Environment state ===
Free: 2
Total: 4
Max: 4

ВТОРОЙ ВАРИАНТ GC сработал:
-Xmx4m -Xms4m
- Создаём в цикле 10_000 объектов
- System.gc();  вызван

объект удалён 147 Petya
объект удалён 1467 Petya
объект удалён 2733 Petya
=== Environment state ===
Free: 2
Total: 4
Max: 4
объект удалён 4718 Petya
объект удалён 1529 Petya



Мы создали 1 объект с сильной ссылкой User user = new User(50, "Petya");
объект будет существовать до выхода из программы.
Также создали N объектов в цикле без ссылок, которые будут определяться как мусор и удаляться при сборке.

При заполнении выделенной памяти, сборщик мусора запускает малую сборку мусора и удаляет объекты user
которые создавались в цикле и не имеют ссылок, из Eden региона молодого поколения. Перед удаляем объекта запускается метод
finalize() и выводит на консоль инф.

Малая сборка мусора удаляет объекты без ссылок, а выжившие объекты переносит в другое поколение
при достижении определенного порога заполненности кучи.



-Xlog:gc*
-Xlog:gc+heap

